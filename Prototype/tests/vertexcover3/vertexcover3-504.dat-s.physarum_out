Answer of test tests/vertexcover3/vertexcover3-504.dat-s
------------------------------
----- Last Matrix Values -----
------------------------------
X_eq =
[[ 1.00474271e+00 -4.76798851e-03  4.72429517e-01 ... -4.76798851e-03
  -4.76798851e-03  0.00000000e+00]
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  0.00000000e+00]
 [ 4.72429517e-01 -2.24189880e-03  4.77220132e-01 ... -2.24189880e-03
  -2.24189880e-03  0.00000000e+00]
 ...
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  0.00000000e+00]
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  0.00000000e+00]
 [ 0.00000000e+00  0.00000000e+00  0.00000000e+00 ...  0.00000000e+00
   0.00000000e+00  4.79061491e-05]]
Eigenvalues of X
[-1.68986821e-13 -5.27517220e-14 -2.02620843e-14 -4.57011625e-15
 -1.75962246e-15 -1.67395065e-15 -1.24501146e-15 -9.87392233e-16
 -5.40679920e-16 -4.96524680e-16 -4.03934041e-16 -2.32181326e-16
 -2.22806448e-16 -1.92311538e-16 -1.28456804e-16 -9.67106369e-17
 -1.02011072e-17 -4.73435570e-18 -2.74520322e-18 -1.99252199e-18
 -1.10142499e-18 -1.70127928e-19 -6.72558860e-20 -3.01969873e-20
 -1.19134742e-20 -4.42137716e-21  9.59637985e-21  1.75583949e-20
  2.98029176e-20  5.91697834e-20  1.11281636e-19  2.19164890e-19
  2.06180174e-18  2.08275974e-17  6.37919804e-17  1.62533488e-16
  1.68846518e-16  2.10840104e-16  2.66533899e-16  3.35157247e-16
  6.91282625e-16  1.67243523e-08  4.79061491e-05  3.08003793e-03
  2.10655793e-02  2.10681075e-02  1.80648102e-01  5.10863806e-01
  5.11776495e-01  5.11776495e-01  7.90784624e-01  6.44150877e+00]
tr(X_eq) = 8.992619935779734
"h" in the last iteration = 0.0880039776680861
------------------------
----- Feasibility ------
------------------------
Feasibility check:
tr(A_0 * X_eq) = 1.0000000000000244, b_0 = 1.0
tr(A_1 * X_eq) = -7.112366251504909e-17, b_1 = 0.0
tr(A_2 * X_eq) = -9.6710833785707e-15, b_2 = 0.0
tr(A_3 * X_eq) = -3.5908775952719907e-16, b_3 = 0.0
tr(A_4 * X_eq) = 5.0306980803327406e-17, b_4 = 0.0
tr(A_5 * X_eq) = -9.449038773645668e-15, b_5 = 0.0
tr(A_6 * X_eq) = -1.1622647289044608e-16, b_6 = 0.0
tr(A_7 * X_eq) = -3.400058012914542e-16, b_7 = 0.0
tr(A_8 * X_eq) = -1.0337217193345793e-14, b_8 = 0.0
tr(A_9 * X_eq) = 3.920475055707584e-16, b_9 = 0.0
tr(A_10 * X_eq) = -2.949029909160572e-16, b_10 = 0.0
tr(A_11 * X_eq) = -1.067028410073334e-14, b_11 = 0.0
tr(A_12 * X_eq) = 1.3357370765021415e-16, b_12 = 0.0
tr(A_13 * X_eq) = 8.72565908416334e-16, b_13 = 0.0
tr(A_14 * X_eq) = 3.2959746043559335e-17, b_14 = 0.0
tr(A_15 * X_eq) = -1.5092094240998222e-16, b_15 = 0.0
tr(A_16 * X_eq) = 3.0878077872387166e-16, b_16 = 0.0
tr(A_17 * X_eq) = -7.228592724395355e-15, b_17 = 0.0
tr(A_18 * X_eq) = -1.0725795251964598e-14, b_18 = 0.0
tr(A_19 * X_eq) = -2.4659094211010313e-14, b_19 = 0.0
tr(A_20 * X_eq) = -1.8774912180496983e-14, b_20 = 0.0
tr(A_21 * X_eq) = -2.2551405187698492e-17, b_21 = 0.0
tr(A_22 * X_eq) = 9.8879238130678e-17, b_22 = 0.0
tr(A_23 * X_eq) = 3.139849491518021e-16, b_23 = 0.0
tr(A_24 * X_eq) = 1.8908485888147197e-16, b_24 = 0.0
tr(A_25 * X_eq) = -1.3334819359833716e-14, b_25 = 0.0
tr(A_26 * X_eq) = -4.701100619897147e-16, b_26 = 0.0
tr(A_27 * X_eq) = -1.0448239495808309e-14, b_27 = 0.0
tr(A_28 * X_eq) = 3.3306690738754696e-16, b_28 = 0.0
tr(A_29 * X_eq) = -1.4556064686921388e-14, b_29 = 0.0
tr(A_30 * X_eq) = -2.983724378680108e-16, b_30 = 0.0
tr(A_31 * X_eq) = -7.45931094670027e-17, b_31 = 0.0
tr(A_32 * X_eq) = 3.0357660829594124e-16, b_32 = 0.0
tr(A_33 * X_eq) = 6.938893903907228e-17, b_33 = 0.0
tr(A_34 * X_eq) = -2.3418766925686896e-16, b_34 = 0.0
tr(A_35 * X_eq) = 1.6479873021779667e-16, b_35 = 0.0
tr(A_36 * X_eq) = -1.231653667943533e-16, b_36 = 0.0
tr(A_37 * X_eq) = 2.42861286636753e-17, b_37 = 0.0
tr(A_38 * X_eq) = -2.6020852139652106e-17, b_38 = 0.0
tr(A_39 * X_eq) = 1.3877787807814457e-17, b_39 = 0.0
tr(A_40 * X_eq) = 1.1882855810441129e-16, b_40 = 0.0
tr(A_41 * X_eq) = -3.972516759986888e-16, b_41 = 0.0
tr(A_42 * X_eq) = -1.1102230246251565e-14, b_42 = 0.0
tr(A_43 * X_eq) = 8.153200337090993e-17, b_43 = 0.0
tr(A_44 * X_eq) = -9.107298248878237e-17, b_44 = 0.0
tr(A_45 * X_eq) = -3.191891195797325e-16, b_45 = 0.0
tr(A_46 * X_eq) = -3.226585665316861e-16, b_46 = 0.0
tr(A_47 * X_eq) = -1.865174681370263e-14, b_47 = 0.0
tr(A_48 * X_eq) = 8.326672684688674e-17, b_48 = 0.0
tr(A_49 * X_eq) = 3.5214886562329184e-16, b_49 = 0.0
tr(A_50 * X_eq) = -4.0158848468863084e-16, b_50 = 0.0
tr(A_51 * X_eq) = 2.000000000000024, b_51 = 2.0
tr(A_52 * X_eq) = 2.000000000000031, b_52 = 2.0
tr(A_53 * X_eq) = 2.000000000000023, b_53 = 2.0
tr(A_54 * X_eq) = 2.000000000000029, b_54 = 2.0
tr(A_55 * X_eq) = 2.0000000000000315, b_55 = 2.0
tr(A_56 * X_eq) = 2.000000000000028, b_56 = 2.0
tr(A_57 * X_eq) = 2.0000000000000364, b_57 = 2.0
tr(A_58 * X_eq) = 2.0000000000000355, b_58 = 2.0
tr(A_59 * X_eq) = 2.0000000000000218, b_59 = 2.0
tr(A_60 * X_eq) = 2.0000000000000178, b_60 = 2.0
tr(A_61 * X_eq) = 2.000000000000018, b_61 = 2.0
tr(A_62 * X_eq) = 2.0000000000000373, b_62 = 2.0
tr(A_63 * X_eq) = 2.00000000000004, b_63 = 2.0
[Augmented Setting]
Primal solution:
[[ 1.00474271e+00 -4.76798851e-03  4.72429517e-01 ... -4.76798851e-03
  -4.76798851e-03 -4.76798851e-03]
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  2.26264044e-05]
 [ 4.72429517e-01 -2.24189880e-03  4.77220132e-01 ... -2.24189880e-03
  -2.24189880e-03 -2.24189880e-03]
 ...
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  2.26264044e-05]
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  2.26264044e-05]
 [-4.76798851e-03  2.26264044e-05 -2.24189880e-03 ...  2.26264044e-05
   2.26264044e-05  2.26264044e-05]]
Dual solution:
0
Tr(CX) = 8.992572029630589
Primal and dual gap: 0
Number of iterations: 2999
Max error in symmetry of Q: 0
Maximum h bound: 0.05
Method name is: Physarum SDC vanilla
This is beta: 4.7906149144679224e-05
Infeasibility : 0
Time spent (seconds): 121.59233474731445
