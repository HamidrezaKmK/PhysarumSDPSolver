Answer of test tests/vertexcover3/vertexcover3-507.dat-s
------------------------------
----- Last Matrix Values -----
------------------------------
X_eq =
[[ 1.00001607e+00 -1.22139246e-05 -1.62330626e-05 ... -1.62330626e-05
  -1.62330626e-05  0.00000000e+00]
 [-1.22139246e-05  4.01940149e-06  1.98276530e-10 ...  1.98276530e-10
   1.98276530e-10  0.00000000e+00]
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  0.00000000e+00]
 ...
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  0.00000000e+00]
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  0.00000000e+00]
 [ 0.00000000e+00  0.00000000e+00  0.00000000e+00 ...  0.00000000e+00
   0.00000000e+00  1.62333261e-07]]
Eigenvalues of X
[-2.11257260e-08 -1.33494865e-13 -9.01777258e-14 -6.98595634e-14
 -9.77038890e-16 -8.58551683e-16 -8.06485440e-16 -4.64993923e-16
 -4.23625509e-16 -4.20792536e-16 -3.42395024e-16 -2.85527296e-16
 -2.48840281e-16 -2.27333744e-16 -1.67110577e-16 -1.07284395e-16
 -9.09607852e-17 -1.68116534e-17 -7.99218463e-19 -2.34857213e-23
 -1.54067554e-24 -6.13476873e-25 -4.52667102e-25 -3.39405287e-25
 -2.19006967e-25 -3.21159319e-26  4.21040458e-26  9.78785659e-26
  1.44802223e-25  3.82282607e-25  6.32445488e-23  2.22615832e-17
  6.25460344e-17  1.33390049e-16  1.82062937e-16  2.37960826e-16
  3.46909252e-16  4.52553661e-16  5.26167511e-16  5.55135568e-16
  5.62664625e-16  7.68624465e-16  9.37256782e-16  1.30121104e-07
  1.62333261e-07  6.91902271e-05  8.27097670e-05  1.98857441e-01
  5.00040516e-01  5.00040516e-01  7.20278133e-01  6.08061556e+00]
tr(X_eq) = 7.999984338643665
"h" in the last iteration = 0.49999999999999956
------------------------
----- Feasibility ------
------------------------
Feasibility check:
tr(A_0 * X_eq) = 0.999999999992506, b_0 = 1.0
tr(A_1 * X_eq) = 4.358153920212826e-16, b_1 = 0.0
tr(A_2 * X_eq) = -4.425103404363806e-16, b_2 = 0.0
tr(A_3 * X_eq) = 4.13636681330376e-16, b_3 = 0.0
tr(A_4 * X_eq) = -3.1220279183077904e-16, b_4 = 0.0
tr(A_5 * X_eq) = -6.237618386216448e-16, b_5 = 0.0
tr(A_6 * X_eq) = 4.79531213050605e-12, b_6 = 0.0
tr(A_7 * X_eq) = 3.152317816501604e-17, b_7 = 0.0
tr(A_8 * X_eq) = 7.554856263150556e-17, b_8 = 0.0
tr(A_9 * X_eq) = 1.0327703319282233e-16, b_9 = 0.0
tr(A_10 * X_eq) = -5.645644000039363e-16, b_10 = 0.0
tr(A_11 * X_eq) = -5.381911821582264e-16, b_11 = 0.0
tr(A_12 * X_eq) = -1.1831356207248067e-17, b_12 = 0.0
tr(A_13 * X_eq) = 3.746595461445127e-12, b_13 = 0.0
tr(A_14 * X_eq) = 6.673476421264427e-12, b_14 = 0.0
tr(A_15 * X_eq) = -5.038829596626382e-17, b_15 = 0.0
tr(A_16 * X_eq) = 2.8811317481086673e-16, b_16 = 0.0
tr(A_17 * X_eq) = 1.6318597948622449e-16, b_17 = 0.0
tr(A_18 * X_eq) = 3.746595461445127e-12, b_18 = 0.0
tr(A_19 * X_eq) = -1.494775982678609e-16, b_19 = 0.0
tr(A_20 * X_eq) = -4.1009947174264205e-17, b_20 = 0.0
tr(A_21 * X_eq) = 2.602762840323014e-17, b_21 = 0.0
tr(A_22 * X_eq) = 6.953807734982279e-12, b_22 = 0.0
tr(A_23 * X_eq) = -5.675459559782714e-16, b_23 = 0.0
tr(A_24 * X_eq) = -2.720737589216593e-16, b_24 = 0.0
tr(A_25 * X_eq) = -2.9873157983764664e-16, b_25 = 0.0
tr(A_26 * X_eq) = 3.7482052848308335e-12, b_26 = 0.0
tr(A_27 * X_eq) = -3.549745675353322e-16, b_27 = 0.0
tr(A_28 * X_eq) = 2.696990613964504e-12, b_28 = 0.0
tr(A_29 * X_eq) = -6.846194618159718e-16, b_29 = 0.0
tr(A_30 * X_eq) = -1.8578481851896922e-16, b_30 = 0.0
tr(A_31 * X_eq) = -4.1608291248204643e-16, b_31 = 0.0
tr(A_32 * X_eq) = -2.972069205325889e-17, b_32 = 0.0
tr(A_33 * X_eq) = -2.491835405550591e-16, b_33 = 0.0
tr(A_34 * X_eq) = -1.1390221448318028e-16, b_34 = 0.0
tr(A_35 * X_eq) = -2.3273077258759156e-16, b_35 = 0.0
tr(A_36 * X_eq) = -1.6203401467795864e-16, b_36 = 0.0
tr(A_37 * X_eq) = 4.797310531950375e-12, b_37 = 0.0
tr(A_38 * X_eq) = 2.6038429021984534e-12, b_38 = 0.0
tr(A_39 * X_eq) = -5.164190472820018e-17, b_39 = 0.0
tr(A_40 * X_eq) = -1.1051069456237406e-16, b_40 = 0.0
tr(A_41 * X_eq) = -2.453210703155795e-16, b_41 = 0.0
tr(A_42 * X_eq) = -2.515687853345272e-16, b_42 = 0.0
tr(A_43 * X_eq) = -6.274142446902053e-17, b_43 = 0.0
tr(A_44 * X_eq) = -2.150718297032339e-16, b_44 = 0.0
tr(A_45 * X_eq) = 3.745226351270503e-12, b_45 = 0.0
tr(A_46 * X_eq) = -2.2402327388981735e-17, b_46 = 0.0
tr(A_47 * X_eq) = 2.6968427491169678e-12, b_47 = 0.0
tr(A_48 * X_eq) = 8.774244894017846e-17, b_48 = 0.0
tr(A_49 * X_eq) = -2.9012572509354295e-16, b_49 = 0.0
tr(A_50 * X_eq) = -1.2483571576633878e-16, b_50 = 0.0
tr(A_51 * X_eq) = 1.9999999999919615, b_51 = 2.0
tr(A_52 * X_eq) = 1.999999999990406, b_52 = 2.0
tr(A_53 * X_eq) = 1.9999999999925038, b_53 = 2.0
tr(A_54 * X_eq) = 1.999999999987614, b_54 = 2.0
tr(A_55 * X_eq) = 1.9999999999916818, b_55 = 2.0
tr(A_56 * X_eq) = 1.999999999992506, b_56 = 2.0
tr(A_57 * X_eq) = 1.9999999999916813, b_57 = 2.0
tr(A_58 * X_eq) = 1.9999999999925082, b_58 = 2.0
tr(A_59 * X_eq) = 1.9999999999919613, b_59 = 2.0
tr(A_60 * X_eq) = 1.9999999999876137, b_60 = 2.0
tr(A_61 * X_eq) = 1.9999999999925067, b_61 = 2.0
tr(A_62 * X_eq) = 1.999999999987614, b_62 = 2.0
[Augmented Setting]
Primal solution:
[[ 1.00001607e+00 -1.22139246e-05 -1.62330626e-05 ... -1.62330626e-05
  -1.62330626e-05 -1.62330626e-05]
 [-1.22139246e-05  4.01940149e-06  1.98276530e-10 ...  1.98276530e-10
   1.98276530e-10  1.98276530e-10]
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  2.63506040e-10]
 ...
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  2.63506040e-10]
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  2.63506040e-10]
 [-1.62330626e-05  1.98276530e-10  2.63506040e-10 ...  2.63506040e-10
   2.63506040e-10  2.63506040e-10]]
Dual solution:
0
Tr(CX) = 7.999984176310404
Primal and dual gap: 0
Number of iterations: 2300
Max error in symmetry of Q: 0
Maximum h bound: 0.05
Method name is: Physarum SDC vanilla
This is beta: 1.6233326110097098e-07
Infeasibility : 0
Time spent (seconds): 92.36483645439148
